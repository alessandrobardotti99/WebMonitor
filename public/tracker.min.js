(()=>{const e={siteId:null,data:{loadTime:0,errors:[],consoleEntries:[],imageIssues:[],resources:[]},init(){if(this.siteId=this.getSiteId(),!this.siteId)return void console.error("WebMonitor: No site ID found");this.trackLoadTime(),this.trackErrors(),this.trackConsole(),this.trackImages(),this.trackResources(),this.setupBeacon()},getSiteId(){const e=document.currentScript;if(e&&e.dataset.siteId)return e.dataset.siteId;const t=document.getElementsByTagName("script");for(const e of t)if(e.dataset.siteId)return e.dataset.siteId;return null},trackLoadTime(){window.addEventListener("load",()=>{const e=performance.getEntriesByType("navigation")[0];this.data.loadTime=e.loadEventEnd-e.startTime,this.sendData()})},trackErrors(){window.addEventListener("error",e=>{e.error&&(this.data.errors.push({type:e.error.name||"Error",message:e.error.message,filename:e.filename,lineNumber:e.lineno,timestamp:new Date().toISOString()}),this.sendData())}),window.addEventListener("unhandledrejection",e=>{this.data.errors.push({type:"Promise Rejection",message:e.reason?.message||String(e.reason),filename:"Unknown",lineNumber:0,timestamp:new Date().toISOString()}),this.sendData()})},trackConsole(){const e={log:console.log,info:console.info,warn:console.warn,error:console.error},t=t=>(...s)=>{this.data.consoleEntries.push({type:t,message:s.map(e=>"object"==typeof e?JSON.stringify(e):String(e)).join(" "),timestamp:new Date().toISOString()}),e[t].apply(console,s),this.sendData()};console.log=t("log"),console.info=t("info"),console.warn=t("warn"),console.error=t("error")},trackImages(){const e=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting){const t=e.target,s=()=>{const e=t.naturalWidth,s=t.naturalHeight,i=t.width,r=t.height,a=Math.abs(e/i);(a>2||a<.5)&&this.data.imageIssues.push({url:t.src,originalSize:{width:e,height:s},displaySize:{width:i,height:r}})};t.complete?s():t.addEventListener("load",s)}})});document.querySelectorAll("img").forEach(t=>e.observe(t))},trackResources(){const e=performance.getEntriesByType("resource");this.data.resources=e.map(e=>({name:e.name,type:e.initiatorType,duration:e.duration,size:e.transferSize}))},setupBeacon(){let e=0;setInterval(()=>{this.sendData(),e++,e>=60&&(this.data.errors=[],this.data.consoleEntries=[],this.data.imageIssues=[],e=0)},6e4)},sendData(){const baseUrl=window.location.hostname==="localhost"?"http://localhost:3000":"https://web-monitor-eta.vercel.app";const e=new Blob([JSON.stringify({siteId:this.siteId,timestamp:Date.now(),data:this.data})],{type:"application/json"});navigator.sendBeacon(`${baseUrl}/api/collect`,e)}};e.init()})();
